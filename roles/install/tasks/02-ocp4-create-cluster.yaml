- name: Create working directory if it does not exist
  file:
    path: "{{ work_dir }}"
    state: directory
    mode: '0755'
  tags: ['create_cluster']

- name: Create working directory if it does not exist
  file:
    path: "{{ work_dir }}/install_dir"
    state: directory
    mode: '0755'
  tags: ['create_cluster']

- name: Verify if install-config already run
  stat:
    path: "{{ work_dir }}/install-config.yaml"
  register: install_config
  tags: ['create_cluster']

- fail:
    msg: "{{ work_dir }} has already been initialized. Please delete it if you want to re-initialize."
  when: install_config.stat.exists

- name: configure install-config
  template:
    src: "{{ role_path }}/templates/install-config.yaml.j2"
    dest: "{{ work_dir }}/install-config.yaml.copy"
  when: install_config.stat.exists == false
  tags: ['create_cluster']

- name: Copy install-config.yaml file
  copy:
    src: "{{ work_dir }}/install-config.yaml.copy"
    dest: "{{ work_dir }}/install_dir/install-config.yaml"
    remote_src: yes
  when: install_config.stat.exists == false
  tags: ['create_cluster']

- name: Verify if Client exist already run
  stat:
    path: "{{ work_dir }}/openshift-install"
  register: exist_install_config
  tags: ['create_cluster']

- name: Install Cluster Openshift {{ ocp_version }}
  shell:
    cmd: "{{ work_dir }}/openshift-install create single-node-ignition-config --dir={{ work_dir }}/install_dir"
    chdir: "{{ work_dir }}"
  when:
    - exist_install_config.stat.exists == true
  register: install_status
  tags: ['create_cluster']


- name: Create RH COREOS
  shell:
    cmd: "{{ work_dir }}/openshift-install create single-node-ignition-config --dir={{ work_dir }}/install_dir"
    chdir: "{{ work_dir }}"
  when:
    - exist_install_config.stat.exists == true
  register: install_status
  tags: ['create_cluster']


- name: Create RH COREOS ISO + ignition
  shell:
    cmd: "podman run --privileged --pull always --rm -v /dev:/dev -v /run/udev:/run/udev -v {{ work_dir }}:/data -w /data quay.io/coreos/coreos-installer:release iso ignition embed -fi install_dir/bootstrap-in-place-for-live-iso.ign {{ random_cluster_name | default(cluster_name) }}-rhcos-live.x86_64.iso "
    chdir: "{{ work_dir }}"
  when:
    - exist_install_config.stat.exists == true
  register: install_status
  tags: ['create_cluster']




